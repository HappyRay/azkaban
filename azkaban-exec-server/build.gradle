/*
 * Copyright 2017 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'distribution'

dependencies {
    compile(project(':az-core'))
    compile(project(':azkaban-common'))

    compile deps.guava
    compile deps.kafkaLog4jAppender
    compile(deps.gobblinKafka) {
        exclude group: 'org.apache.hadoop'
    }

    runtime(project(':azkaban-hadoop-security-plugin'))

    testCompile(project(path: ':azkaban-common', configuration: 'testCompile'))
    testCompile(project(':azkaban-common').sourceSets.test.output)

    testCompile deps.h2
    testCompile deps.hadoopAnnotations
    testCompile deps.hadoopAuth
    testCompile deps.hadoopCommon
    testCompile deps.hadoopHdfs
}

configurations.compile {
    exclude group: 'com.linkedin.gobblin', module: 'gobblin-api'
    exclude group: 'com.linkedin.gobblin', module: 'gobblin-metrics-graphite'
    exclude group: 'com.linkedin.gobblin', module: 'gobblin-metrics-hadoop'
    exclude group: 'com.linkedin.gobblin', module: 'gobblin-metrics-influxdb'
    exclude group: 'com.linkedin.gobblin', module: 'gobblin-runtime'

    exclude group: 'org.projectlombok', module: 'lombok'
}

distributions {
    main {
        contents {
            from('src/main/bash') {
                into 'bin'
                fileMode = 0755
            }
            from('../azkaban-common/src/main/bash') {
                into 'bin'
                fileMode = 0755
            }
            from(configurations.runtime) {
                into 'lib'
            }
            from(jar) {
                into 'lib'
            }
        }
    }
}
